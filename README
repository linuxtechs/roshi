
	500px DevOps Coding Challenge

 	Ansible will be used to complete this challenge.


- Ubuntu 14.04

The Challenge:

- A single instance of Roshi server 
- A single instance of Redis server 
- An HTTP proxy server in front of Roshi 

Test the result:

- roshi-server -redis.instances=localhost:6379

criteria must be met:  
 
- Roshi server is running, and the process is supervised. 
- Redis server is running, and the process is supervised. 
- The proxy server is running, and the process is supervised. 
- Roshi is accessible from any IP in the 172.31.32.x  subnet on  port 80 . It is not 
accessible from any IP outside that subnet. 
- The solution is idempotent and convergent. This means that it does everything it needs 
to do on the first run, and it can be run over and over without consequence or race 
conditions.


Install Steps:-

 - Copy your user public key "~/.ssh/id_rsa.pub" to root authorized keys file "~/.ssh/authorized_keys" on the server side 'AWS'

 - Make sure you can login without password

       $ ssh root@YOUR-AWS.compute.amazonaws.com

 - Install ansible on your machine

	First, add the PPA using the apt-add-repository command.
	$ sudo apt-add-repository ppa:ansible/ansible

	Once that has finished, update the apt cache.
	$ sudo apt-get update

	Finally, install Ansible.
	$ sudo apt-get install ansible

 - Install Git

       $ sudo apt-get install git

 - Clone 500px repo

       $ git clone https://github.com/rkhshan/500px.git

 - Change host IP address for production with AWS IP "YOUR-AWS.compute.amazonaws.com"

      $ vi hosts

 - Run the ansible.sh file

       $ ./ansible.sh

 - Start Roshi On the server side 'AWS' as roshi user or root

       $ roshi-server -redis.instances=localhost:6379


 - Do some test

	- Insert:

POST to /. Provide a request body with a JSON array of key-score-member objects.

$ cat insert.json
[{"key":"Zm9r", "score":1.55, "member":"rks6"},
 {"key":"Zm9r", "score":1.99, "member":"rks7"}]


$ curl -Ss -d@insert.json -XPOST 'http://localhost:80' | jq .


	- Select:


$ cat select.json
["Zm9r"]

$ curl -Ss -d@select.json -XGET 'http://localhost:80' | jq .


 - Firewall Status

	$ ufw status verbose
	Status: active
	Logging: on (low)
	Default: reject (incoming), allow (outgoing), disabled (routed)
	New profiles: skip

	To                         Action      From
	--                         ------      ----
	22/tcp                     ALLOW IN    Anywhere
	80/tcp                     ALLOW IN    172.31.32.0/24
	22/tcp (v6)                ALLOW IN    Anywhere (v6)



